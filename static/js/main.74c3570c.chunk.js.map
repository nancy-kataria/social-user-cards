{"version":3,"sources":["Components/Location.js","Components/PhoneNumber.js","Components/SocialCard.js","App.js","reportWebVitals.js","index.js"],"names":["Location","location","className","street","number","name","city","state","postcode","PhoneNumber","type","SocialCard","user","first","last","phone","cell","src","picture","medium","alt","App","useState","users","setUsers","allUsers","setAllUsers","useEffect","a","fetch","response","json","userData","results","console","log","placeholder","onInput","e","target","value","toLowerCase","filteredUsers","filter","includes","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAaeA,EAXE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACI,sBAAKC,UAAU,WAAf,UACI,8BAAID,EAASE,OAAOC,OAApB,KAA8BH,EAASE,OAAOE,QAC9C,4BAAIJ,EAASK,OACb,4BAAIL,EAASM,QACb,4BAAIN,EAASO,eCEVC,EARG,SAAC,GAAmB,IAAlBL,EAAiB,EAAjBA,OAAQM,EAAS,EAATA,KACxB,OACI,qBAAKR,UAAU,eAAf,SACI,8BAAIQ,EAAJ,KAAYN,QCaTO,EAdI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACjB,OACI,sBAAKV,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UAA6BU,EAAKP,KAAKQ,MAAvC,IAA+CD,EAAKP,KAAKS,QACzD,sBAAKZ,UAAU,YAAf,UACI,cAAC,EAAD,CAAUD,SAAUW,EAAKX,WACzB,cAAC,EAAD,CAAaS,KAAK,OAAON,OAAQQ,EAAKG,QACtC,cAAC,EAAD,CAAaL,KAAK,SAASN,OAAQQ,EAAKI,OACxC,qBAAKd,UAAU,aAAf,SAA4B,qBAAKe,IAAKL,EAAKM,QAAQC,OAAQC,IAAI,wBCoChEC,MA5Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KA4BA,OA1BAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAG0BC,MAAM,yCAHhC,cAGSC,EAHT,gBAIqBA,EAASC,OAJ9B,OAIGC,EAJH,OAIsCC,QAJtC,gDAOGC,QAAQC,IAAR,MACAH,EAAW,GARd,QAUCR,EAASQ,GACTN,EAAYM,GAXb,wDAAD,KAaC,IAaD,sBAAK9B,UAAU,MAAf,UACE,8CACA,uBAAOA,UAAU,aAAakC,YAAY,YAAYC,QAbtC,SAACC,GACnBJ,QAAQC,IAAIG,EAAEC,OAAOC,OACrB,IAAMA,EAAQF,EAAEC,OAAOC,MAAMC,cAEvBC,EAAgBjB,EAASkB,QAAQ,SAAA/B,GAAI,MACzC,UAAGA,EAAKP,KAAKQ,MAAb,YAAsBD,EAAKP,KAAKS,MAAO2B,cAAcG,SAASJ,MAEhEhB,EAASkB,MAQP,qBAAKxC,UAAU,kBAAf,SACGqB,EAAMsB,KAAI,SAACjC,EAAMkC,GAAP,OACT,cAAC,EAAD,CAAYlC,KAAMA,GAAWkC,YC7BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74c3570c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Location = ({location}) => {\n    return (\n        <div className='location'>\n            <p>{location.street.number}, {location.street.name}</p>\n            <p>{location.city}</p>\n            <p>{location.state}</p>\n            <p>{location.postcode}</p>\n        </div>\n    )\n}\n\nexport default Location\n","import React from 'react'\n\nconst PhoneNumber=({number, type})=> {\n    return (\n        <div className='phone-number'>\n            <p>{type}: {number}</p>\n        </div>\n    )\n}\n\nexport default PhoneNumber\n","import React from 'react'\nimport Location from'./Location'\nimport PhoneNumber from './PhoneNumber'\n\nconst SocialCard = ({user}) => {\n    return (\n        <div className='card'>\n            <div className='card-title'>{user.name.first} {user.name.last}</div>\n            <div className='card-body'>\n                <Location location={user.location} />\n                <PhoneNumber type='Home' number={user.phone} />\n                <PhoneNumber type='Mobile' number={user.cell} />\n                <div className='card-image'><img src={user.picture.medium} alt='client-pic' /></div>\n            </div>\n        </div>\n    )\n}\n\nexport default SocialCard\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SocialCard from \"./Components/SocialCard\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [allUsers, setAllUsers] = useState([])\n\n  useEffect(() => {\n    (async () => {\n      let userData;\n      try {\n        const response = await fetch(\"https://randomuser.me/api/?results=20\");\n        userData = (await response.json()).results; //parses json to js\n        //The Response interface of the Fetch API represents the response to a request.\n      } catch (errors) {\n        console.log(errors);\n        userData = [];\n      }\n      setUsers(userData);\n      setAllUsers(userData)\n    })();\n  }, []);\n\n  const filterCards = (e) =>{\n    console.log(e.target.value)\n    const value = e.target.value.toLowerCase()\n    \n    const filteredUsers = allUsers.filter( user => (\n      `${user.name.first} ${user.name.last}`.toLowerCase().includes(value)\n    ))\n    setUsers(filteredUsers)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Social Cards</h1>\n      <input className='search-box' placeholder='Search...' onInput={filterCards} />\n      {/* <Button variant='contained'>Hello world</Button> */}\n      <div className=\"cards-container\">\n        {users.map((user, index) => (\n          <SocialCard user={user} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}